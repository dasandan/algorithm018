1.入队 add， offer；入队不需要抛异常是因为数组是可以进行扩容的，不会有插不进去的情况。
      add方法调用的也是offer，所以两者是一致的。不允许元素是null，会抛异常。 
      用siftup方法，看是否有比较器，采用不同的方法入队。siftUpComparable 不停的与父节点进行比较，如果比父节点小就交换位置，如果比父节点大就跳出循环。

2.出队 remove，poll；
      remove调用的是poll方法，没有元素的时候会抛出异常。
      将队首的元素弹出，将队列末元素移到队首，siftDownComparable不停的与最小的子节点比，如果比最小的子节点大，就交换位置继续比较，将自己沉下去。
3.扩容 grow
     传过来的参数是想要的最小容量。旧的容量是队列的长度，当旧的容量比64小的时候，新容量就直接翻倍，如果旧的容量比64大，每次增加的容量是原来的一半。
     检查是否溢出，创建一个新的数组，把旧的数组拷贝过去。当前数量大于等于数组的长度了，就扩容。
    
4.取队首元素
      如果有元素就取下标是0的元素，peek如果没有元素就返回null。element抛出异常。